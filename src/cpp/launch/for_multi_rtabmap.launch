<launch>
    <!--
    $ sudo apt install ros-melodic-turtlebot3* ros-melodic-dwa-local-planner
    To avoid TF warning about leading '/' in frame name, remove it in:
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/global_costmap_params.yaml"
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/local_costmap_params.yaml"
    Example Gazebo:
    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch turtlebot3_gazebo turtlebot3_world.launch
    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch rtabmap_ros demo_turtlebot3_navigation.launch
  -->

    <!-- Arguments -->

    <arg name="for_frame" default=""/>
    <arg name="topic_name" default=""/>
    <arg name="robot_name" default=""/>
    <arg name="color_topic" default="$(arg topic_name)/camera/rgb/image_raw"/>
    <arg name="depth_topic" default="$(arg topic_name)/camera/depth/image_raw"/>
    <arg name="camera_info_topic" default="$(arg topic_name)/camera/rgb/camera_info"/>

    <arg name="map_frame" default="$(arg for_frame)map"/>
    <arg name="frame_id" default="$(arg for_frame)base_footprint"/>
    <arg name="odom_frame" default="$(arg for_frame)odom"/>
    <arg name="odom_topic" default="$(arg topic_name)/odom"/>
    <!-- base/rover's frame -->

    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="open_rviz" default="true"/>
    <arg name="rtabmapviz" default="true"/>
    <arg name="move_forward_only" default="false"/>

    <arg name="with_camera" default="true"/>
    <arg name="localization" default="false"/>
    <arg name="database_path" default="~/.ros/$(arg for_frame)rtabmap.db"/>
    <arg if="$(arg localization)" name="rtabmap_args" default=""/>
    <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>

    <!-- base/rover's frame -->

    <!-- Turtlebot3 -->
    <!-- <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
    </include>
     -->

    <group ns="rtabmap">
        <node if="$(eval model=='waffle')" pkg="rtabmap_ros" type="rgbd_sync" name="rgbd_sync">
            <remap from="rgb/image" to="$(arg topic_name)/camera/rgb/image_raw"/>
            <remap from="depth/image" to="$(arg topic_name)/camera/depth/image_raw"/>
            <remap from="rgb/camera_info" to="$(arg topic_name)/camera/rgb/camera_info"/>
        </node>

        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" args="$(arg rtabmap_args)">
            <param name="map_frame_id" type="string" value="$(arg map_frame)"/>
            <remap from="odom" to="$(arg odom_topic)"/>
            <!-- <param name="odom_frame_id" type="string" value="$(arg robot_name)"/> -->

            <param name="database_path" type="string" value="$(arg database_path)"/>
            <param name="frame_id" type="string" value="$(arg frame_id)"/>
            <!-- <param name="odom_frame_id" type="string" value="$(arg odom_frame)"/> -->
            <param name="subscribe_rgb" type="bool" value="false"/>
            <param name="subscribe_depth" type="bool" value="false"/>
            <param if="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="true"/>
            <param unless="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="false"/>
            <param name="subscribe_scan" type="bool" value="true"/>
            <param name="approx_sync" type="bool" value="true"/>

            <!-- use actionlib to send goals to move_base -->
            <!-- <param name="use_action_for_goal" type="bool" value="true"/>
            <remap from="move_base" to="/move_base"/> -->

            <!-- inputs -->
            <remap from="scan" to="$(arg topic_name)/scan"/>
            <remap from="odom" to="$(arg topic_name)/odom"/>
            <!-- <remap from="rgbd_image" to="$(arg topic_name)/rgbd_image"/> -->

            <!-- output -->
            <remap from="grid_map" to="$(arg topic_name)/map"/>

            <!-- RTAB-Map's parameters -->
            <param name="Reg/Strategy" type="string" value="1"/>
            <param name="Reg/Force3DoF" type="string" value="true"/>
            <param name="GridGlobal/MinSize" type="string" value="20"/>

            <!-- localization mode -->
            <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
            <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
        </node>

        <!-- visualization with rtabmapviz -->
        <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
            <param name="subscribe_scan" type="bool" value="true"/>
            <param name="subscribe_odom" type="bool" value="true"/>
            <param name="frame_id" type="string" value="$(arg frame_id)"/>
            <param name="approx_sync" type="bool" value="true"/>
            <remap from="odom" to="$(arg topic_name)/odom"/>
            <remap from="scan" to="$(arg topic_name)/scan"/>
        </node>
    </group>

    <!-- <node name="base_to_camera" pkg="tf" type="static_transform_publisher" args="0.15 0.15 0.3 0 0.3490658 0 /base_link   /camera_link 100"/> -->


    <!-- move_base -->
    <!-- <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="move_forward_only" value="$(arg move_forward_only)"/>
    </include> -->

    <!-- rviz -->
    <!-- <group if="$(arg open_rviz)">
        <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
    </group> -->
</launch>