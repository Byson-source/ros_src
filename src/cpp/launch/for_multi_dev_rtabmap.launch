<launch>
    <!-- Arguments -->

    <arg name="for_frame" default=""/>
    <arg name="topic_name" default=""/>
    <arg name="color_topic" default="$(arg topic_name)/camera/color/image_raw"/>
    <arg name="depth_topic" default="$(arg topic_name)/camera/aligned_depth_to_color/image_raw"/>
    <arg name="camera_info_topic" default="$(arg topic_name)/camera/color/camera_info"/>

    <arg name="map_frame" default="$(arg for_frame)map"/>
    <arg name="frame_id" default="$(arg for_frame)base_link"/>
    <arg name="odom_frame" default="$(arg for_frame)odom"/>
    <arg name="odom_topic" default="$(arg topic_name)/visual_odometry"/>
    <!-- base/rover's frame -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="open_rviz" default="true"/>
    <arg name="rtabmapviz" default="true"/>

    <arg name="with_camera" default="true"/>
    <arg name="localization" default="false"/>
    <arg name="database_path" default="~/.ros/$(arg for_frame)rtabmap.db"/>
    <arg if="$(arg localization)" name="rtabmap_args" default=""/>
    <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>

    <group ns="rtabmap">
        <node pkg="rtabmap_ros" type="rgbd_sync" name="rgbd_sync">
            <remap from="rgb/image" to="$(arg topic_name)/camera/color/image_raw"/>
            <remap from="depth/image" to="$(arg topic_name)/camera/aligned_depth_to_color/image_raw"/>
            <remap from="rgb/camera_info" to="$(arg topic_name)/camera/color/camera_info"/>
        </node>

        <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" args="$(arg rtabmap_args)" output="screen">
            <param name="map_frame_id" type="string" value="$(arg map_frame)"/>
            <remap from="odom" to="$(arg odom_topic)"/>
            <!-- <param name="odom_frame_id" type="string" value="$(arg robot_name)"/> -->

            <param name="database_path" type="string" value="$(arg database_path)"/>
            <param name="frame_id" type="string" value="$(arg frame_id)"/>
            <!-- <param name="odom_frame_id" type="string" value="$(arg odom_frame)"/> -->
            <param name="subscribe_rgb" type="bool" value="false"/>
            <param name="subscribe_depth" type="bool" value="false"/>
            <param if="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="true"/>
            <param unless="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="false"/>
            <param name="subscribe_scan" type="bool" value="false"/>
            <param name="approx_sync" type="bool" value="true"/>
            <param name="publish_tf" value="true"/>
            <param name="Grid/CellSize" type="double" value="0.01"/>
            <param name="Grid/3D" type="bool" value="true"/>
            <!-- inputs -->
            <remap from="odom" to="$(arg odom_topic)"/>
            <!-- <remap from="rgbd_image" to="$(arg topic_name)/rgbd_image"/> -->

            <!-- RTAB-Map's parameters -->
            <param name="Reg/Strategy" type="string" value="1"/>
            <param name="Reg/Force3DoF" type="string" value="true"/>
            <param name="GridGlobal/MinSize" type="string" value="20"/>

            <!-- localization mode -->
            <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
            <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
        </node>

        <node name="rgbd_odometry" pkg="rtabmap_ros" type="rgbd_odometry" args="$(arg rtabmap_args)">
            <remap from="rgb/image" to="$(arg color_topic)"/>
            <remap from="depth/image" to="$(arg depth_topic)"/>
            <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
            <!-- <remap from="rgbd_image" to="rgbd_image"/> -->
            <remap from="odom" to="$(arg odom_topic)"/>
            <!-- VO output topic -->
            <param name="frame_id" type="string" value="$(arg frame_id)"/>
            <param name="odom_frame_id" type="string" value="$(arg odom_frame)"/>
            <!-- VO frame -->
            <param name="ground_truth_base_frame_id" type="string" value=""/>
            <param name="wait_for_transform_duration" type="double" value="0.3"/>
            <param name="approx_sync" type="bool" value="false"/>
            <param name="queue_size" type="int" value="10"/>
            <param name="subscribe_rgbd" type="bool" value="true"/>
            <param name="guess_min_translation" type="double" value="0"/>
            <param name="guess_min_rotation" type="double" value="0"/>
            <!-- RTABMAP RGBD Odometry parameters -->
            <param name="Odom/Strategy" type="string" value="1"/>
            <!-- def:0(F2M) -->
            <param name="Odom/ResetCountdown" type="string" value="1"/>
            <!--param name="Odom/Holonomic" type="string" value="true"/-->
            <param name="Vis/CorType" type="string" value="0"/>
            <!-- def:0(Features Matching) -->
            <param name="OdomF2M/Maxsize" type="string" value="1000"/>
            <!-- def:2000 -->
            <!-- Visual Features Registration parameters -->
            <param name="Vis/BundleAdjustment" type="string" value="0"/>
            <!-- def:1 (g2o) -->

            <!-- Motion Estimation: 3D to 2D (PnP) parameters -->
            <param name="Vis/MaxFeatures" type="string" value="600"/>
            <!-- def:1000 -->
            <param name="Vis/RoiRatios" type="string" value="0.0 0.0 0.0 0.0"/>
        </node>

        <!-- visualization with rtabmapviz -->
        <!-- <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
            <param name="subscribe_scan" type="bool" value="true"/>
            <param name="subscribe_odom" type="bool" value="true"/>
            <param name="frame_id" type="string" value="$(arg frame_id)"/>
            <param name="approx_sync" type="bool" value="true"/>
            <remap from="odom" to="$(arg topic_name)/odom"/>
            <remap from="scan" to="$(arg topic_name)/scan"/>
        </node> -->
    </group>

    <!-- rviz -->
    <!-- <group if="$(arg open_rviz)">
        <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
    </group> -->
</launch>